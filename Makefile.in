SRC_DIR = @srcdir@
HAVE_UDP = @HAVE_UDP@

ifeq ($(HAVE_UDP),yes)
SUBDIRS = common qw_client qw_server uquake
else
SUBDIRS = common uquake
endif

DESTDIR =

ANONCVS=:pserver:anonymous@cvs.quake.sourceforge.net:/cvsroot/quake

all:
	@for dir in $(SUBDIRS); do \
	$(MAKE) -C $$dir $@ || exit; \
	done

distclean:
	rm -f config.cache config.log config.status Makefile
	rm -f common/config.h
	rm -f build_rpm quakeforge-*.tar.gz quakeforge.spec
	find . -name \*~ | xargs rm -f
	find . -name \*.bak | xargs rm -f
	find . -name '.#*' | xargs rm -f
	find . -name '#*#' | xargs rm -f
	find . -name core -type f | xargs rm -f
	rm -rf targets
	for dir in $(SUBDIRS); do \
	$(MAKE) -C $$dir $@ || exit; \
	done

clean-autoconf mrproper: distclean
	rm -f common/config.h.in
	rm -f configure

%:
	@for dir in $(SUBDIRS); do \
	$(MAKE) -C $$dir $@ || exit; \
	done


changelog:
	@echo "CVS will ask for a passwd, press enter"
	cvs -d$(ANONCVS) login
	./tools/cvs2cl/cvs2cl.pl -g -d$(ANONCVS)

# Code to automatically re-configure, only runs if you are compiling in the
# source directory
ifeq ($(SRC_DIR),.)
configure: configure.in acconfig.h
	./bootstrap

CONFIG_SRC    = Makefile.in qw_client/Makefile.in qw_server/Makefile.in \
		uquake/Makefile.in common/Makefile.in

$(patsubst %.in,%,$(CONFIG_SRC)): configure $(CONFIG_SRC)
	$(SHELL) ./config.status --recheck
	$(SHELL) ./config.status

endif
